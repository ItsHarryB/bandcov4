---
import "../styles/global.css";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>TEST: Brighton and Co</title>
  </head>
  <body>
    <!-- Header -->
    <header style="position: relative; display: flex; align-items: center; justify-content: space-between; padding: 1rem; background-color: inherit;">
      
      <!-- Left: Hamburger -->
      <div class="hamburger">
        <span class="line line1"></span>
        <span class="line line2"></span>
        <span class="line line3"></span>
      </div>

      <!-- Center: Site title/logo -->
      <div class="site-title" style="flex: 1; text-align: center;">
        <a href="/" style="text-decoration:none; color:inherit; font-weight:bold;">TEST: Brighton and Co</a>
      </div>

      <!-- Right: Theme toggle -->
      <button id="theme-toggle" class="theme-toggle" style="cursor:pointer; font-size:1.2rem;">
        <span class="theme-icon"></span> <!-- JS will populate -->
      </button>

      <!-- Nav links -->
      <nav class="nav-links">
        <a href="/">Home</a>
        <a href="/blog">Blog</a>
        <a href="/about">About</a>
      </nav>
    </header>

    <main>
      <slot />
    </main>

    <!-- Scripts -->
    <script type="module">
      document.addEventListener('DOMContentLoaded', () => {
        // Hamburger toggle
        const hamburger = document.querySelector('.hamburger');
        const nav = document.querySelector('.nav-links');

        if (hamburger !== null && nav !== null) {
          hamburger.addEventListener('click', () => {
            nav.classList.toggle('expanded');
            hamburger.classList.toggle('active'); // animate hamburger into X
          });
        }

        // Theme toggle
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle !== null) {
          const themeIcon = themeToggle.querySelector('.theme-icon');
          if (!themeIcon) return;

          function setTheme(theme) {
            if (theme === 'dark') {
              document.documentElement.classList.add('dark');
              themeIcon.textContent = '🌙';
              themeIcon.style.color = '#ffffff';
              if (hamburger) {
                const lines = hamburger.querySelectorAll('.line');
                lines.forEach(line => line.style.backgroundColor = '#ffffff');
              }
              localStorage.setItem('theme', 'dark');
            } else {
              document.documentElement.classList.remove('dark');
              themeIcon.textContent = '☀️';
              themeIcon.style.color = '#0094b6';
              if (hamburger) {
                const lines = hamburger.querySelectorAll('.line');
                lines.forEach(line => line.style.backgroundColor = '#0094b6');
              }
              localStorage.setItem('theme', 'light');
            }
          }

          // Apply saved theme on load
          const savedTheme = localStorage.getItem('theme') || 'light';
          setTheme(savedTheme);

          themeToggle.addEventListener('click', () => {
            const current = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
            setTheme(current === 'dark' ? 'light' : 'dark');
          });
        }
      });
    </script>
  </body>
</html>
