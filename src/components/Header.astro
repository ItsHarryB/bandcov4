---
import "../styles/global.css";
import Navigation from './Navigation.astro';
import ThemeIcon from './ThemeIcon.astro';
---

<header class="site-header">
  <div class="nav-overlay" id="nav-overlay"></div>

  <div class="hamburger" id="hamburger">
    <span class="line line1"></span>
    <span class="line line2"></span>
    <span class="line line3"></span>
  </div>

  <div class="site-title">
    <a href="/">My Site</a>
  </div>

  <ThemeIcon id="theme-toggle" class="theme-toggle" />
  <Navigation id="nav" />

  <script type="module">
    const hamburger = document.getElementById('hamburger');
    const navOverlay = document.getElementById('nav-overlay');
    const nav = document.getElementById('nav');
    const themeToggle = document.getElementById('theme-toggle');

    // Hamburger toggle
    if (hamburger && nav && navOverlay) {
      hamburger.addEventListener('click', () => {
        nav.classList.toggle('expanded');
        hamburger.classList.toggle('active');
        navOverlay.classList.toggle('active');
      });
      navOverlay.addEventListener('click', () => {
        nav.classList.remove('expanded');
        hamburger.classList.remove('active');
        navOverlay.classList.remove('active');
      });
    }

    // Theme toggle
    if (themeToggle) {
      const themeIcon = themeToggle.querySelector('.theme-icon');
      if (!themeIcon) return;

      const setTheme = (theme) => {
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
          themeIcon.textContent = '🌙';
          themeIcon.style.color = '#ffffff';
          localStorage.setItem('theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          themeIcon.textContent = '☀️';
          themeIcon.style.color = '#0094b6';
          localStorage.setItem('theme', 'light');
        }

        if (hamburger) {
          const lines = hamburger.querySelectorAll('.line');
          lines.forEach(line => {
            line.style.backgroundColor = theme === 'dark' ? '#ffffff' : '#0094b6';
          });
        }
      };

      setTheme(localStorage.getItem('theme') || 'light');

      themeToggle.addEventListener('click', () => {
        const current = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
        setTheme(current === 'dark' ? 'light' : 'dark');
      });
    }

    // Smooth scroll & active link highlighting
    if (nav) {
      const navLinks = nav.querySelectorAll('a');
      const sections = Array.from(navLinks).map(link => {
        const id = link.getAttribute('href')?.substring(1);
        return id ? document.getElementById(id) : null;
      }).filter(Boolean);

      navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          const id = link.getAttribute('href')?.substring(1);
          const target = id ? document.getElementById(id) : null;
          if (target) target.scrollIntoView({ behavior: 'smooth' });

          if (nav.classList.contains('expanded')) {
            nav.classList.remove('expanded');
            hamburger?.classList.remove('active');
            navOverlay?.classList.remove('active');
          }
        });
      });

      window.addEventListener('scroll', () => {
        const scrollPos = window.scrollY + 100;
        sections.forEach((section, index) => {
          if (!section) return;
          const top = section.offsetTop;
          const bottom = top + section.offsetHeight;
          const link = navLinks[index];
          if (scrollPos >= top && scrollPos < bottom) link.classList.add('active');
          else link.classList.remove('active');
        });
      });
    }
  </script>
</header>
