---
import "../styles/global.css";
import Navigation from './Navigation.astro';
import ThemeIcon from './ThemeIcon.astro';
---

<header class="site-header">
  <div class="nav-overlay" id="nav-overlay"></div>

  <div class="hamburger" id="hamburger">
    <span class="line line1"></span>
    <span class="line line2"></span>
    <span class="line line3"></span>
  </div>

  <div class="site-title">
    <a href="/">TEST: Brighton and Co</a>
  </div>

  <ThemeIcon id="theme-toggle" class="theme-toggle" />
  <Navigation id="nav" />

  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const hamburger = document.getElementById('hamburger');
      const navOverlay = document.getElementById('nav-overlay');
      const nav = document.getElementById('nav');
      const themeToggle = document.getElementById('theme-toggle');

      // ---------- Hamburger toggle ----------
      if (hamburger && nav && navOverlay) {
        hamburger.addEventListener('click', () => {
          nav.classList.toggle('expanded');
          hamburger.classList.toggle('active');
          navOverlay.classList.toggle('active');
        });

        navOverlay.addEventListener('click', () => {
          nav.classList.remove('expanded');
          hamburger.classList.remove('active');
          navOverlay.classList.remove('active');
        });
      }

      // ---------- Theme toggle ----------
      if (themeToggle) {
        const themeIcon = themeToggle.querySelector('.theme-icon');
        if (!themeIcon) return;

        const setTheme = (theme) => {
          themeIcon.classList.add('spin');
          setTimeout(() => themeIcon.classList.remove('spin'), 500);

          if (theme === 'dark') {
            document.documentElement.classList.add('dark');
            themeIcon.textContent = '🌙';
          } else {
            document.documentElement.classList.remove('dark');
            themeIcon.textContent = '☀️';
          }

          localStorage.setItem('theme', theme);
        };

        setTheme(localStorage.getItem('theme') || 'light');

        themeToggle.addEventListener('click', () => {
          const current = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
          setTheme(current === 'dark' ? 'light' : 'dark');
        });
      }

      // ---------- Active link highlighting based on current URL ----------
      if (nav) {
        const navLinks = nav.querySelectorAll('a');
        const currentPath = window.location.pathname;

        navLinks.forEach(link => {
          const linkPath = new URL(link.href).pathname;
          if (linkPath === currentPath) {
            link.classList.add('active');
          } else {
            link.classList.remove('active');
          }

          // Close mobile menu when a link is clicked
          link.addEventListener('click', () => {
            if (nav.classList.contains('expanded')) {
              nav.classList.remove('expanded');
              hamburger?.classList.remove('active');
              navOverlay?.classList.remove('active');
            }
          });
        });
      }
    });
  </script>
</header>
